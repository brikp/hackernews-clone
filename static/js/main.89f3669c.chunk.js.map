{"version":3,"sources":["contexts/theme.js","components/NavBar.js","utils/api.js","components/Loading.js","utils/commonFunctions.js","components/StoryCard.js","components/StoryList.js","components/Top.js","components/New.js","components/User.js","components/CommentCard.js","components/CommentList.js","components/Post.js","components/App.js","index.js"],"names":["React","createContext","Consumer","Provider","ThemeConsumer","ThemeProvider","NavBar","theme","toggleTheme","to","exact","onClick","type","apiURL","params","fetchItem","id","a","fetch","response","json","data","Error","fetchTopStories","fetchNewStories","storiesToFetch","startingIndex","storyList","trimmedList","slice","promisesToCall","reduce","promises","storyId","fn","push","Promise","all","then","userId","user","numberOfComments","submitted","index","story","kids","map","commentId","styles","content","fontSize","position","left","right","marginTop","textAlign","Loading","state","props","text","this","speed","interval","window","setInterval","setState","clearInterval","style","Component","convertUnixTimeToDateTimeString","unixTime","Date","toUTCString","createMarkup","__html","StoryCard","by","time","title","url","dateTime","checkedUrl","Fragment","href","pathname","search","length","StoryList","stories","key","defaultProps","Top","error","loading","fetchTopStoriesData","catch","e","console","warn","New","fetchNewStoriesData","User","loadingUser","loadingPosts","posts","location","fetchUser","queryString","parse","fetchUserPosts","userStories","value","created","karma","about","dangerouslySetInnerHTML","PostCard","CommentList","comments","comment","Post","loadingStory","loadingComments","fetchStoryComments","res","App","background","path","component","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.89f3669c.chunk.js","sourcesContent":["import React from 'react';\n\nconst { Consumer, Provider } = React.createContext();\n\nexport const ThemeConsumer = Consumer;\nexport const ThemeProvider = Provider;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { ThemeConsumer } from '../contexts/theme';\n\nexport default function NavBar() {\n  return (\n    <ThemeConsumer>\n      {({ theme, toggleTheme }) => (\n        <nav>\n          <ul>\n            <li>\n              <NavLink to=\"/\" exact>Top</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/new\">New</NavLink>\n            </li>\n          </ul>\n          <button\n            onClick={toggleTheme}\n            type=\"button\"\n          >\n            {theme === 'light' ? 'ðŸ”¦' : 'ðŸ’¡'}\n          </button>\n        </nav>\n      )}\n    </ThemeConsumer>\n  );\n}\n","const apiURL = 'https://hacker-news.firebaseio.com/v0';\nconst params = '.json';\n\nexport async function fetchItem(id) {\n  try {\n    const response = await fetch(`${apiURL}/item/${id}${params}`);\n    const data = await response.json();\n    return data;\n  } catch (e) {\n    throw new Error(e);\n  }\n}\n\nasync function fetchTopStories() {\n  const response = await fetch(`${apiURL}/topstories${params}`);\n  const data = await response.json();\n\n  return data;\n}\n\nasync function fetchNewStories() {\n  const response = await fetch(`${apiURL}/newstories${params}`);\n  const data = await response.json();\n\n  return data;\n}\n\nexport async function fetchTopStoriesData(storiesToFetch = 500, startingIndex = 0) {\n  const storyList = await fetchTopStories();\n  const trimmedList = storyList.slice(startingIndex, startingIndex + storiesToFetch);\n  const promisesToCall = trimmedList.reduce((promises, storyId) => {\n    const fn = fetchItem(storyId);\n    promises.push(fn);\n    return promises;\n  }, []);\n  return Promise.all(promisesToCall).then((data) => data);\n}\n\nexport async function fetchNewStoriesData(storiesToFetch = 500, startingIndex = 0) {\n  const storyList = await fetchNewStories();\n  const trimmedList = storyList.slice(startingIndex, startingIndex + storiesToFetch);\n  const promisesToCall = trimmedList.reduce((promises, storyId) => {\n    const fn = fetchItem(storyId);\n    promises.push(fn);\n    return promises;\n  }, []);\n  return Promise.all(promisesToCall).then((data) => data);\n}\n\nexport async function fetchUser(userId) {\n  const response = await fetch(`${apiURL}/user/${userId}${params}`);\n  const data = await response.json();\n\n  return data;\n}\n\nexport async function fetchUserPosts(user, numberOfComments) {\n  const promisesToCall = user.submitted.reduce((promises, id, index) => {\n    if (index > numberOfComments) return promises;\n    const fn = fetchItem(id);\n    promises.push(fn);\n    return promises;\n  }, []);\n  return Promise.all(promisesToCall).then((data) => data);\n}\n\nexport async function fetchStoryComments(story) {\n  if (!story.kids) return [];\n  const promisesToCall = story.kids.map((commentId) => {\n    const fn = fetchItem(commentId);\n    return fn;\n  });\n  return Promise.all(promisesToCall).then((data) => data);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst styles = {\n  content: {\n    fontSize: '35px',\n    position: 'absolute',\n    left: '0',\n    right: '0',\n    marginTop: '20px',\n    textAlign: 'center',\n  },\n};\n\nexport default class Loading extends React.Component {\n  state = {\n    content: this.props.text,\n  }\n\n  componentDidMount() {\n    const { text, speed } = this.props;\n\n\n    this.interval = window.setInterval(() => {\n      const { content } = this.state;\n      content === `${text}...`\n        ? this.setState({ content: text })\n        // eslint-disable-next-line no-shadow\n        : this.setState(({ content }) => ({ content: `${content}.` }));\n    }, speed);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.interval);\n  }\n\n  render() {\n    const { content } = this.state;\n    return (\n      <p style={styles.content}>\n        {content}\n      </p>\n    );\n  }\n}\n\nLoading.propTypes = {\n  text: PropTypes.string,\n  speed: PropTypes.number,\n};\n\nLoading.defaultProps = {\n  text: 'Loading',\n  speed: 250,\n};\n","export function convertUnixTimeToDateTimeString(unixTime) {\n  const time = new Date(unixTime * 1000).toUTCString();\n  return time;\n}\n\nexport function createMarkup(text) {\n  return { __html: text };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { convertUnixTimeToDateTimeString } from '../utils/commonFunctions';\n\nexport default function StoryCard({\n  by, time, title, url, id, kids,\n}) {\n  const dateTime = convertUnixTimeToDateTimeString(time);\n  // If there is no URL - this is a askHN story and should link to /post route\n  const checkedUrl = url || `/post?id=${id}`;\n  return (\n    <React.Fragment>\n      <div>\n        <h3>\n          <a href={checkedUrl}>{title}</a>\n        </h3>\n      </div>\n      <div>\n        <h4>\n          {' by '}\n          <Link to={{\n            pathname: '/user',\n            search: `?id=${by}`,\n          }}\n          >\n            {by}\n          </Link>\n          {' on '}\n          {dateTime}\n          {' with '}\n          <Link to={{\n            pathname: '/post',\n            search: `?id=${id}`,\n          }}\n          >\n            {kids.length}\n          </Link>\n          {' comments'}\n        </h4>\n      </div>\n    </React.Fragment>\n  );\n}\n\nStoryCard.propTypes = {\n  by: PropTypes.string.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  kids: PropTypes.array.isRequired,\n  time: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport StoryCard from './StoryCard';\n\nexport default function StoryList({ stories }) {\n  return (\n    <ul>\n      {stories.map((story) => {\n        const {\n          by, kids, id, time, title, url, type,\n        } = story;\n\n        if (type !== 'story') return null;\n        return (\n          <li key={id}>\n            <StoryCard\n              by={by}\n              kids={kids || []}\n              title={title}\n              time={time}\n              url={url}\n              id={id}\n            />\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nStoryList.propTypes = {\n  stories: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import React from 'react';\nimport { fetchTopStoriesData } from '../utils/api';\nimport Loading from './Loading';\nimport StoryList from './StoryList';\n\n// TODO: Refactor Top/New components to minimize code repetition\nexport default class Top extends React.Component {\n  state = {\n    stories: [],\n    error: null,\n    loading: true,\n  }\n\n  componentDidMount() {\n    fetchTopStoriesData(50)\n      .then((data) => {\n        this.setState({ stories: data, loading: false });\n      })\n      .catch((e) => {\n        console.warn('Error fetching data: ', e);\n        this.setState({ error: 'There was an error fetching data', loading: false });\n      });\n  }\n\n  // isLoading = () => {\n  //   const { stories, error } = this.state;\n  //   return !stories && error === null;\n  // }\n\n  render() {\n    const { stories, error, loading } = this.state;\n\n    return (\n      <React.Fragment>\n        {loading && <Loading text=\"Fetching top stories\" />}\n\n        {error && <p>{error}</p>}\n\n        {stories.length && <StoryList stories={stories} />}\n      </React.Fragment>\n    );\n  }\n}\n","import React from 'react';\nimport { fetchNewStoriesData } from '../utils/api';\nimport Loading from './Loading';\nimport StoryList from './StoryList';\n\n// TODO: Refactor Top/New components to minimize code repetition\nexport default class New extends React.Component {\n  state = {\n    stories: [],\n    error: null,\n    loading: true,\n  }\n\n  componentDidMount() {\n    fetchNewStoriesData(50)\n      .then((data) => {\n        this.setState({ stories: data, loading: false });\n      })\n      .catch((e) => {\n        console.warn('Error fetching data: ', e);\n        this.setState({ error: 'There was an error fetching data', loading: false });\n      });\n  }\n\n  // isLoading = () => {\n  //   const { stories, error } = this.state;\n  //   return !stories && error === null;\n  // }\n\n  render() {\n    const { stories, error, loading } = this.state;\n\n    return (\n      <React.Fragment>\n        {loading && <Loading text=\"Fetching new stories\" />}\n\n        {error && <p>{error}</p>}\n\n        {stories.length && <StoryList stories={stories} />}\n      </React.Fragment>\n    );\n  }\n}\n","import React from 'react';\nimport queryString from 'query-string';\nimport PropTypes from 'prop-types';\nimport StoryList from './StoryList';\nimport Loading from './Loading';\nimport { fetchUserPosts, fetchUser } from '../utils/api';\nimport { convertUnixTimeToDateTimeString, createMarkup } from '../utils/commonFunctions';\n\nexport default class User extends React.Component {\n  state = {\n    loadingUser: true,\n    loadingPosts: true,\n    user: null,\n    posts: null,\n  }\n\n  componentDidMount() {\n    const { location } = this.props;\n    const { id } = queryString.parse(location.search);\n    fetchUser(id)\n      .then((user) => {\n        this.setState({ user, loadingUser: false });\n        fetchUserPosts(user, 20)\n          .then((posts) => {\n            const userStories = posts.reduce((stories, value) => {\n              if (value.type === 'story') stories.push(value);\n              return stories;\n            }, []);\n            this.setState({ posts: userStories, loadingPosts: false });\n          });\n      });\n  }\n\n  render() {\n    const { user, posts, loadingPosts, loadingUser } = this.state;\n    return (\n      <React.Fragment>\n        {loadingUser && <Loading text=\"Fetching user data\" />}\n\n        {(!loadingUser && loadingPosts) && <Loading text=\"Fetching user stories\" />}\n\n        {user && (\n          <div>\n            <h1>{user.id}</h1>\n            <h4>{`joined ${convertUnixTimeToDateTimeString(user.created)} has ${user.karma} karma`}</h4>\n\n            {user.about\n            // eslint-disable-next-line react/no-danger\n            && <p dangerouslySetInnerHTML={createMarkup(user.about)} />}\n          </div>\n        )}\n\n        {posts && (\n          <div>\n            <h2>Posts</h2>\n            {posts.length > 0\n              ? <StoryList stories={posts} />\n              : <p>This user did not submit any stories yet</p>}\n          </div>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nUser.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  location: PropTypes.object.isRequired,\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { convertUnixTimeToDateTimeString, createMarkup } from '../utils/commonFunctions';\n\nexport default function PostCard({ by, time, text }) {\n  const dateTime = convertUnixTimeToDateTimeString(time);\n  return (\n    <React.Fragment>\n      <h4>\n        {'by '}\n        <Link to={{\n          pathname: '/user',\n          search: `?id=${by}`,\n        }}\n        >\n          {by}\n        </Link>\n        {` on ${dateTime}`}\n      </h4>\n      {/* eslint-disable-next-line react/no-danger */}\n      <p dangerouslySetInnerHTML={createMarkup(text)} />\n    </React.Fragment>\n  );\n}\n\nPostCard.propTypes = {\n  by: PropTypes.string.isRequired,\n  time: PropTypes.number.isRequired,\n  text: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CommentCard from './CommentCard';\n\nexport default function CommentList({ comments }) {\n  return (\n    <ul>\n      {comments.length > 0 && comments.map((comment) => {\n        const { id, by, time, text } = comment;\n\n        return (\n          <li key={id}>\n            <CommentCard\n              by={by}\n              time={time}\n              text={text}\n            />\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nCommentList.propTypes = {\n  comments: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import React from 'react';\nimport queryString from 'query-string';\nimport PropTypes from 'prop-types';\nimport { fetchStoryComments, fetchItem } from '../utils/api';\nimport Loading from './Loading';\nimport StoryCard from './StoryCard';\nimport CommentList from './CommentList';\n\nexport default class Post extends React.Component {\n  state = {\n    story: null,\n    comments: null,\n    loadingStory: true,\n    loadingComments: true,\n  }\n\n  componentDidMount() {\n    const { location } = this.props;\n    const { id } = queryString.parse(location.search);\n    fetchItem(id)\n      .then((story) => {\n        this.setState({ story, loadingStory: false });\n        fetchStoryComments(story)\n          .then((res) => {\n            this.setState({ comments: res, loadingComments: false });\n          });\n      });\n  }\n\n  render() {\n    const { story, comments, loadingStory, loadingComments } = this.state;\n    return (\n      <React.Fragment>\n        {loadingStory && <Loading text=\"Fetching story\" />}\n\n        {(!loadingStory && loadingComments) && <Loading text=\"Fetching comments\" />}\n\n        {story && (\n          <StoryCard\n            by={story.by}\n            kids={comments || []}\n            title={story.title}\n            time={story.time}\n            url={story.url}\n            id={story.id}\n          />\n        )}\n\n        {comments && <CommentList comments={comments} />}\n\n      </React.Fragment>\n    );\n  }\n}\n\nPost.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  location: PropTypes.object.isRequired,\n};\n","/* eslint-disable react/no-unused-state */\nimport React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport NavBar from './NavBar';\nimport Top from './Top';\nimport New from './New';\nimport User from './User';\nimport Post from './Post';\nimport { ThemeProvider } from '../contexts/theme';\n\nclass App extends React.Component {\n  state = {\n    theme: 'light',\n    toggleTheme: () => {\n      this.setState(({ theme }) => ({\n        theme: theme === 'light' ? 'dark' : 'light',\n      }));\n    },\n  }\n\n  render() {\n    const { theme } = this.state;\n    const style = theme === 'light' ? { background: 'rgb(255, 215, 0)' } : { background: 'rgb(255, 191, 116)' };\n    return (\n      <Router>\n        <ThemeProvider value={this.state}>\n          <div style={style}>\n            <NavBar />\n            <Switch>\n              <Route exact path=\"/\" component={Top} />\n              <Route exact path=\"/new\" component={New} />\n              <Route path=\"/user\" component={User} />\n              <Route path=\"/post\" component={Post} />\n              <Route render={() => <h1>404</h1>} />\n            </Switch>\n          </div>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}